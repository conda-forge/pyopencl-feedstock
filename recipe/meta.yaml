{% set name = "pyopencl" %}
{% set version = "2024.2.1" %}
{% set build_number = 1 %}
{% set sha256 = "54660b8904f4cf89acd9ee20575d4357d51809662b52a6cfa386aa2cfed6c7d2" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: {{ build_number }}

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - nanobind >=1.9.2                       # [build_platform != target_platform]
    - scikit-build                           # [build_platform != target_platform]
    - cmake
    - {{ compiler('cxx') }}
    - {{ stdlib("c") }}
    - make  # [unix]
  host:
    - python
    - pip
    - nanobind >=1.9.2
    - scikit-build
    - numpy
    - ocl-icd      # [linux]
    - khronos-opencl-icd-loader      # [win or osx]

  run:
    - python
    - {{ pin_compatible("numpy") }}
    - pytools
    - mako
    - platformdirs
    - khronos-opencl-icd-loader      # [win or osx]
    - ocl-icd      # [linux]

test:
  requires:
    - pytest
    - pocl  >=0.14      # [linux or osx]
    - oclgrind          # [win]
    # See https://github.com/conda-forge/pocl-feedstock/pull/96:
    - ld64 <711         # [osx]
  imports:
    - {{ name }}
  source_files:
    - test
    - examples/demo.py
  commands:
    - echo %OCL_ICD_FILENAMES%  # [win]
    - python examples/demo.py
    - python -c 'import pyopencl as cl; context = cl.create_some_context(); queue = cl.CommandQueue(context); mem_pool = cl.tools.MemoryPool(cl.tools.ImmediateAllocator(queue)); b= mem_pool.allocate(10); print(type(b)); b.release()'
    # tests crash on aarch64/ppc64le
    # - python -m pytest -v test/   # [linux64 or osx]

about:
  home: https://pypi.python.org/pypi/pyopencl
  doc_url: https://documen.tician.de/pyopencl
  dev_url: https://github.com/inducer/pyopencl
  license: MIT
  license_file: LICENSE
  summary: Python wrapper for OpenCL
  description: |
    PyOpenCL lets you access GPUs, multi-core CPUs, and other massively
    parallel compute devices from Python, through the OpenCL parallel
    compute interface.

extra:
  recipe-maintainers:
    - inducer
    - isuruf
    - matthiasdiener
